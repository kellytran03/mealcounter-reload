# MySql Database server
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-setup
data:
  create.sql: |
    select "hello from database init script!" from dual;
  wait.sh: |
    until echo '\q' | mysql -hmysql -P"$PORT" -u"$USER" -p"$PASSWORD" $DATABASE; do
        echo "waiting for godot ..."
        sleep 2
    done
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-admin
type: kubernetes.io/basic-auth
stringData:
  username: user
  password: password
  database: db
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: database
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: standard
  resources:
    requests:
      storage: 5Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      component: mysql
  template:
    metadata:
      labels:
        component: mysql
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: database
        - name: init-script
          configMap:
            name: mysql-setup
            items:
              - key: create.sql
                path: create.sql
      containers:
        - name: mysql
          image: mysql:8
          resources:
            limits:
              memory: "1Gi"
              cpu: "1000m"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d
              readOnly: true
          env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-admin
                  key: username
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: mysql-admin
                  key: database
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-admin
                  key: password
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-admin
                  key: password
            - name: MYSQL_ROOT_HOST
              value: '%'
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
    - port: 3306
      targetPort: 3306
      protocol: TCP
      name: mysql
  selector:
    component: mysql
